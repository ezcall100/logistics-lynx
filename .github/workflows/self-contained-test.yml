# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# yaml-language-server: disableContextAccess: true
# yaml-language-server: disableDefaultProperties: true
# yaml-language-server: disableAdditionalProperties: true
# yaml-language-server: validate: false
# yaml-language-server: disableSchemaValidation: true

name: 🔒 Self-Contained Test (No Git)

on:
  workflow_dispatch:
  push:
    branches: [main, develop]

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  self-contained-test:
    name: 🔒 Self-Contained Validation
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: 🔍 System Information
        run: |
          echo "🔍 Self-Contained System Test"
          echo "============================"
          echo "OS: $(uname -a)"
          echo "User: $(whoami)"
          echo "Working Directory: $(pwd)"
          echo "Date: $(date -Is)"
          echo "GitHub Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo ""
          echo "✅ System information collected"

      - name: 🔍 Current Directory Analysis
        run: |
          echo "🔍 Current Directory Analysis"
          echo "============================"
          echo "📁 Current directory contents:"
          ls -la
          echo ""

          # Count common file types safely
          file_count=$(find . -type f \( -name "*.yml" -o -name "*.yaml" -o -name "*.json" -o -name "*.md" \) | wc -l | tr -d ' ')
          echo "📊 Total files found (yml,yaml,json,md): $file_count"

          if [ "$file_count" -gt 0 ]; then
            echo "✅ Files are present in the workspace"
          else
            echo "❌ No files found in the workspace"
          fi

          echo ""
          echo "✅ Directory analysis completed"

      - name: 🔍 Environment Variables
        run: |
          echo "🔍 Environment Variables"
          echo "======================"
          echo "📋 GitHub Context:"
          echo "- Event: ${{ github.event_name }}"
          echo "- Repository: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Run ID: ${{ github.run_id }}"
          echo "- Actor: ${{ github.actor }}"
          echo ""
          echo "📋 System Environment:"
          echo "- HOME: $HOME"
          echo "- PWD:  $PWD"
          echo "- USER: ${USER:-unknown}"
          echo "- PATH: $PATH"
          echo ""
          echo "✅ Environment variables checked"

      - name: 🔍 Network Connectivity Test
        run: |
          echo "🔍 Network Connectivity Test"
          echo "==========================="

          echo "📡 DNS resolution (getent)"
          if getent hosts github.com >/dev/null 2>&1; then
            echo "✅ DNS resolution: OK"
          else
            echo "❌ DNS resolution: FAILED"
          fi

          echo ""
          echo "🌐 Basic HTTP connectivity (httpbin)"
          if curl -fsS --connect-timeout 5 https://httpbin.org/get >/dev/null 2>&1; then
            echo "✅ Basic HTTP connectivity: OK"
          else
            echo "❌ Basic HTTP connectivity: FAILED"
          fi

          echo ""
          echo "🔒 GitHub API reachability"
          if curl -fsS --connect-timeout 5 https://api.github.com/zen >/dev/null 2>&1; then
            echo "✅ GitHub API connectivity: OK"
          else
            echo "❌ GitHub API connectivity: FAILED"
          fi

          echo ""
          echo "🔒 GitHub.com reachability"
          if curl -fsS --connect-timeout 5 https://github.com >/dev/null 2>&1; then
            echo "✅ GitHub.com connectivity: OK"
          else
            echo "❌ GitHub.com connectivity: FAILED"
          fi

          echo ""
          echo "✅ Network connectivity test completed"

      - name: 🔍 Available Tools
        run: |
          echo "🔍 Available Tools"
          echo "=================="
          tools=("python3" "node" "npm" "git" "curl" "wget" "jq" "yq")
          for tool in "${tools[@]}"; do
            if command -v "$tool" >/dev/null 2>&1; then
              v="$("$tool" --version 2>/dev/null | head -1 || echo "version unknown")"
              echo "✅ $tool: $v"
            else
              echo "❌ $tool: not available"
            fi
          done
          echo ""
          echo "✅ Available tools checked"

      - name: 🔍 File System Permissions
        run: |
          echo "🔍 File System Permissions"
          echo "=========================="
          echo "📁 Current directory permissions:"
          ls -ld .
          echo ""
          echo "📋 Read permission:"
          [ -r . ] && echo "✅ Can read current directory" || echo "❌ Cannot read current directory"
          echo ""
          echo "📋 Write permission:"
          [ -w . ] && echo "✅ Can write to current directory" || echo "❌ Cannot write to current directory"
          echo ""
          echo "📋 Execute/search permission:"
          [ -x . ] && echo "✅ Can execute/search in current directory" || echo "❌ Cannot execute/search in current directory"
          echo ""
          echo "✅ File system permissions checked"

      - name: 📊 Self-Contained Test Summary
        if: always()
        run: |
          echo "## 🔒 Self-Contained Test Results"
          echo ""
          echo "**Status:** Self-contained test completed"
          echo "**Git Operations:** ❌ Not attempted"
          echo "**External Actions:** ❌ Not used"
          echo "**Repository:** \`${{ github.repository }}\`"
          echo "**Branch:** \`${{ github.ref_name }}\`"
          echo "**Commit:** \`${{ github.sha }}\`"
          echo "**Time:** \`$(date -Is)\`"
          echo ""
          echo "### 🎯 What Was Tested"
          echo "- System information collected"
          echo "- Current directory analyzed"
          echo "- Environment variables checked"
          echo "- Network connectivity tested"
          echo "- Available tools verified"
          echo "- File system permissions checked"
          echo ""
          echo "### 💡 Notes"
          echo "- This workflow avoids git operations and external actions"
          echo "- Suitable for quick runner diagnostics without dependencies"
