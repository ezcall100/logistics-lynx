# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# yaml-language-server: disableContextAccess: true
# yaml-language-server: disableDefaultProperties: true
# yaml-language-server: disableAdditionalProperties: true
# yaml-language-server: validate: false
# yaml-language-server: disableSchemaValidation: true

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Snapshot toolchain
        run: node -v && npm -v && npx eslint -v && npx tsc -v

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Type check
        run: npm run type-check

      - name: Lint code
        run: npm run lint:ci || echo "⚠️ Linting completed with warnings (non-blocking)"

      - name: Run tests
        run: npm run test
        env:
          CI: 'true'

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist

      - name: Build size check
        run: |
          echo "Build size:"
          du -sh dist/

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for vulnerabilities
        run: |
          if npm audit --audit-level=moderate; then
            echo "No security vulnerabilities found"
          else
            echo "Security vulnerabilities detected"
            exit 1
          fi



  e2e:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Install Cypress
        run: npm install cypress --save-dev

      - name: Build application
        run: npm run build

      - name: Start application
        run: |
          npx http-server ./dist -p 8080 &
          sleep 5

      - name: Run Cypress E2E tests
        run: npx cypress run --browser chrome --headless
        env:
          CYPRESS_baseUrl: http://localhost:8080

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  performance:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Build application
        run: npm run build

      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates gnupg
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Run k6 load test
        run: |
          npx http-server ./dist -p 8080 &
          sleep 5
          k6 run k6/smoke.js --env BASE_URL=http://localhost:8080

  lighthouse:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Build application
        run: npm run build

      - name: Start application
        run: |
          npx http-server ./dist -p 8080 &
          sleep 5

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --config .lighthouserc.json

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [build, security, e2e]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist

      - name: Deploy to preview environment
        run: |
          echo "Deploying preview for PR #${{ github.event.number }}"
          # Add your deployment logic here (Vercel, Netlify, etc.)

  notify:
    runs-on: ubuntu-latest
    needs: [build, security, e2e, performance, lighthouse]
    if: always()

    steps:
      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ CI pipeline failed"
          # Add notification logic (Slack, email, etc.)

      - name: Notify on success
        if: success()
        run: |
          echo "✅ CI pipeline passed"
          # Add notification logic (Slack, email, etc.)
