name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  READYZ_MODE: ${{ vars.READYZ_MODE || 'strict' }}
  NODE_VERSION: '18'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      # Optional: Lint ratchet (keep shipping while reducing debt)
      - name: Lint analysis
        run: npm run lint:report
        continue-on-error: true

      - name: Lint ratchet check
        run: LINT_MAX=171 npm run lint:ratchet
        continue-on-error: true

      - name: Build application
        run: npm run build

      - name: Deploy to production
        run: npm run deploy
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_SERVICE_NAME: ${{ vars.OTEL_SERVICE_NAME || 'transbot-ai-prod' }}
          HOST: ${{ vars.PROD_HOST }}

      # Post-deploy smoke tests (strict readiness must be 200)
      - name: Smoke test - Health endpoint
        run: |
          echo "Testing health endpoint..."
          curl -fsS http://${{ vars.PROD_HOST }}:8089/healthz && echo " ‚úÖ Health endpoint OK"
        continue-on-error: false

      - name: Smoke test - Readiness endpoint
        run: |
          echo "Testing readiness endpoint..."
          RESPONSE=$(curl -fsS http://${{ vars.PROD_HOST }}:8089/readyz)
          echo "Response: $RESPONSE"
          echo "$RESPONSE" | grep -q '"ready":true' || (echo "‚ùå Readiness endpoint not green" && exit 1)
          echo " ‚úÖ Readiness endpoint OK"
        continue-on-error: false

      - name: Smoke test - Web interface
        run: |
          echo "Testing web interface..."
          curl -fsS http://${{ vars.PROD_HOST }}:8084 && echo " ‚úÖ Web interface OK"
        continue-on-error: false

      - name: Deploy success notification
        if: success()
        run: |
          echo "üéâ Production deployment successful!"
          echo "Health: http://${{ vars.PROD_HOST }}:8089/healthz"
          echo "Readiness: http://${{ vars.PROD_HOST }}:8089/readyz"
          echo "Web Interface: http://${{ vars.PROD_HOST }}:8084"

      - name: Deploy failure notification
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          echo "Check the logs above for details."
