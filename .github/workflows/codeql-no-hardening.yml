# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# yaml-language-server: disableContextAccess: true
# yaml-language-server: disableDefaultProperties: true
# yaml-language-server: disableAdditionalProperties: true
# yaml-language-server: validate: false
# yaml-language-server: disableSchemaValidation: true

name: CodeQL (No Hardening)

on:
  workflow_dispatch:
  push:
    branches: [main, develop]

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze (No Hardening)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      # For JS/TS, a build isn't strictly required, but installing deps improves results.
      - name: 🟢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install dependencies (best effort)
        run: |
          if [ -f package.json ]; then
            npm ci --no-audit --no-fund || true
            npm run build --if-present || true
          else
            echo "No package.json found; skipping install/build."
          fi

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

      - name: 📊 Test Results Summary
        run: |
          echo "## 🔍 CodeQL Test Results"
          echo ""
          echo "**Status:** CodeQL analysis completed"
          echo "**Hardening:** Disabled for testing"
          echo "**Network Access:** Unrestricted"
          echo ""
          echo "### 🎯 What This Means:"
          echo "- CodeQL can access required endpoints"
          echo "- No network restrictions applied"
          echo "- Analysis should complete successfully"
          echo ""
          echo "### 🔧 Next Steps:"
          echo "1. If this works: Previous hardening blocked access"
          echo "2. If this fails: There may be a deeper network issue"
          echo "3. Re-enable hardening later with proper allowlists"
