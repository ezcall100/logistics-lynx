name: Autonomous Build & Deploy

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  autonomous-build:
    name: ü§ñ Autonomous Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install dependencies
      run: |
        cd logistics-lynx
        npm ci

    - name: Run autonomous build system
      run: |
        cd logistics-lynx
        node scripts/autonomous-build.mjs
      env:
        NODE_ENV: production
        CI: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          logistics-lynx/dist/
          logistics-lynx/build-reports/
        retention-days: 30

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          logistics-lynx/logs/
        retention-days: 7

  autonomous-deploy:
    name: üöÄ Autonomous Deploy
    needs: autonomous-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: logistics-lynx/

    - name: Deploy to staging
      if: github.ref == 'refs/heads/develop' || github.event.inputs.environment == 'staging'
      run: |
        cd logistics-lynx
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # Example: npm run deploy:staging

    - name: Deploy to production
      if: github.ref == 'refs/heads/main' && github.event.inputs.environment == 'production'
      run: |
        cd logistics-lynx
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: npm run deploy:production

    - name: Run post-deployment health checks
      run: |
        cd logistics-lynx
        npm run check:portals
        npm run health:check

  autonomous-monitoring:
    name: üìä Autonomous Monitoring
    runs-on: ubuntu-latest
    needs: autonomous-deploy
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Run health checks
      run: |
        cd logistics-lynx
        npm run check:portals
      continue-on-error: true

    - name: Generate monitoring report
      run: |
        cd logistics-lynx
        node scripts/generate-monitoring-report.mjs
      continue-on-error: true

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Autonomous build failed! Check the GitHub Actions logs for details."
        echo "Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
