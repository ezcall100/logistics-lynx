# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# yaml-language-server: disableContextAccess: true
# yaml-language-server: disableDefaultProperties: true
# yaml-language-server: disableAdditionalProperties: true
# yaml-language-server: validate: false
# yaml-language-server: disableSchemaValidation: true

name: Pipeline Self-Test

on:
  schedule:
    - cron: "0 9 * * 1" # Mondays 09:00 UTC
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: selftest-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'

jobs:
  selftest:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        workdir: ['.', 'logistics-lynx'] # root project + subproject

    defaults:
      run:
        shell: bash

    steps:
      - name: 🔒 Harden runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com
            github.com
            codeload.github.com
            objects.githubusercontent.com
            registry.npmjs.org
            nodejs.org

      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm
          cache-dependency-path: |
            package-lock.json
            logistics-lynx/package-lock.json

      - name: 📦 Install dependencies (if present)
        working-directory: ${{ matrix.workdir }}
        run: |
          set -euo pipefail
          if [[ -f package.json && -f package-lock.json ]]; then
            npm ci
          else
            echo "ℹ️ No package.json or package-lock.json in '${{ matrix.workdir }}'; skipping install."
          fi

      - name: 🔍 Run ESLint (if available)
        working-directory: ${{ matrix.workdir }}
        run: |
          set -euo pipefail
          if [[ -f package.json ]]; then
            if npx --no-install eslint -v >/dev/null 2>&1; then
              npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0
            else
              echo "ℹ️ eslint not installed in '${{ matrix.workdir }}'; skipping lint."
            fi
          else
            echo "ℹ️ No package.json in '${{ matrix.workdir }}'; skipping lint."
          fi

      - name: 🔧 TypeScript check (if tsconfig exists)
        working-directory: ${{ matrix.workdir }}
        run: |
          set -euo pipefail
          if [[ -f tsconfig.json ]]; then
            if npx --no-install tsc -v >/dev/null 2>&1; then
              npx tsc --noEmit
            else
              echo "ℹ️ typescript not installed in '${{ matrix.workdir }}'; skipping tsc."
            fi
          else
            echo "ℹ️ No tsconfig.json in '${{ matrix.workdir }}'; skipping tsc."
          fi

      - name: 🧪 Run tests (best effort)
        working-directory: ${{ matrix.workdir }}
        run: |
          set -euo pipefail
          if [[ -f package.json ]]; then
            npm run test --if-present || echo "⚠️ Tests failed or not present in '${{ matrix.workdir }}'."
          else
            echo "ℹ️ No package.json; skipping tests."
          fi

      - name: 🏗️ Build application (dry run)
        working-directory: ${{ matrix.workdir }}
        run: |
          set -euo pipefail
          if [[ -f package.json ]]; then
            npm run build --if-present && echo "✅ Build completed in '${{ matrix.workdir }}'" || echo "ℹ️ No build script in '${{ matrix.workdir }}'."
          else
            echo "ℹ️ No package.json; skipping build."
          fi

      - name: 🔍 Validate deployment files (root only)
        if: ${{ matrix.workdir == '.' }}
        run: |
          set -euo pipefail
          echo "🔍 Checking deployment system files..."
          [[ -f "deployment/autonomous-deployment-system.js" ]] && echo "✅ autonomous-deployment-system.js found" || echo "⚠️ autonomous-deployment-system.js not found"
          for file in "24-7-autonomous-system.cjs" "agent-boot.js" "test-n8n-webhook-cursor.js"; do
            [[ -f "$file" ]] && echo "✅ $file found" || echo "⚠️ $file not found"
          done

      - name: 🧾 Self-Test Summary
        if: ${{ always() && matrix.workdir == '.' }}
        run: |
          {
            echo "## 🧪 Pipeline Self-Test Results"
            echo ""
            echo "- **Ref**: \`${{ github.ref_name }}\`"
            echo "- **Commit**: \`${{ github.sha }}\`"
            echo "- **Status**: \`${{ job.status }}\`"
            echo "- **Triggered by**: ${{ github.actor }}"
            echo ""
            echo "### ✅ What was tested (per project: root, logistics-lynx)"
            echo "- 📦 Dependencies installation"
            echo "- 🔍 ESLint validation (if eslint present)"
            echo "- 🔧 TypeScript compilation (if tsconfig present)"
            echo "- 🧪 Test execution (best effort)"
            echo "- 🏗️ Build (if script present)"
            echo "- 🔍 Deployment file validation (root)"
            echo ""
            if [[ "${{ job.status }}" == "success" ]]; then
              echo "✅ All checks passed or were gracefully skipped where not applicable."
            else
              echo "❌ Some checks failed. Review logs to address lint/build/test issues."
            fi
          } >> "$GITHUB_STEP_SUMMARY"
