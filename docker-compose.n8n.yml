version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: tms-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Basic Configuration
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-tms-admin-2024}
      
      # Database Configuration (PostgreSQL)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD:-n8n-secure-2024}
      
      # Security & Performance
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-32-char-encryption-key-here}
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_LOG_LEVEL=info
      - N8N_DIAGNOSTICS_ENABLED=false
      
      # Webhook Configuration
      - N8N_WEBHOOK_URL=http://localhost:5678/
      - N8N_WEBHOOK_TEST_URL=http://localhost:5678/
      
      # File Upload Configuration
      - N8N_FILES_BACKEND=local
      - N8N_FILES_LOCAL_STORAGE_PATH=/home/node/.n8n/files
      
      # Custom Environment Variables for TMS Integration
      - TMS_SUPABASE_URL=${SUPABASE_URL}
      - TMS_SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - TMS_SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - TMS_SENDGRID_API_KEY=${SENDGRID_API_KEY}
      
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows:ro
      - ./n8n-credentials:/home/node/.n8n/credentials:ro
      
    depends_on:
      - postgres
      
    networks:
      - tms-network

  postgres:
    image: postgres:15-alpine
    container_name: tms-n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD:-n8n-secure-2024}
    volumes:
      - n8n_postgres_data:/var/lib/postgresql/data
    networks:
      - tms-network

  redis:
    image: redis:7-alpine
    container_name: tms-n8n-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - n8n_redis_data:/data
    networks:
      - tms-network

volumes:
  n8n_data:
    driver: local
  n8n_postgres_data:
    driver: local
  n8n_redis_data:
    driver: local

networks:
  tms-network:
    driver: bridge
