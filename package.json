{
  "name": "logistics-lynx-parent",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "dev:web": "cd logistics-lynx && vite --port 8084",
    "dev:autonomous": "cd logistics-lynx && node scripts/autonomous-agent-continuous.mjs",
    "start:autonomous": "cd logistics-lynx && node --enable-source-maps dist/autonomous-orchestrator.mjs",
    "start:autonomous:full": "cd logistics-lynx && concurrently -n WEB,AGENTS,CTRL -c auto \"npm run dev\" \"node scripts/admin-portal-autonomous-agent.mjs --continuous\" \"npx tsx scripts/health-check.mts\"",
    "start:autonomous:accelerated": "cd logistics-lynx && concurrently -n WEB,AGENTS,CTRL -c auto \"npm run dev\" \"node scripts/admin-portal-autonomous-agent.mjs --accelerated --continuous\" \"npx tsx scripts/health-check.mts\"",
    "monitor:admin:realtime": "cd logistics-lynx && node scripts/real-time-admin-monitor.mjs",
    "admin:status": "cd logistics-lynx && node scripts/admin-status.mjs",
    "ops:status": "cd logistics-lynx && npx tsx scripts/green-posture-script.mts",
    "ops:daily": "cd logistics-lynx && npx tsx scripts/operational-cadence.mts daily",
    "ops:emergency-stop": "cd logistics-lynx && npx tsx scripts/incident-response.mts stop",
    "ops:resume": "cd logistics-lynx && npx tsx scripts/incident-response.mts resume",
    "build": "cd logistics-lynx && npm run build",
    "build:dev": "cd logistics-lynx && npm run build:dev",
    "build:dev:check": "cd logistics-lynx && npm run build:dev:check",
    "preview": "cd logistics-lynx && npm run preview",
    "lint": "cd logistics-lynx && npm run lint",
    "lint:ci": "cd logistics-lynx && npm run lint:ci",
    "test": "cd logistics-lynx && npm run test",
    "portal:scan": "cd logistics-lynx && npm run portal:scan",
    "autonomous:build": "cd logistics-lynx && npm run autonomous:build",
    "autonomous:continuous": "cd logistics-lynx && npm run autonomous:continuous",
    "knowledge:lint": "node scripts/knowledge-lint.js",
    "test:autonomous:comprehensive": "node scripts/test-autonomous-agents.mjs",
    "autonomy:seal": "node scripts/autonomy-seal.mjs",
    "db:bootstrap": "node scripts/db-bootstrap.mjs",
    "ops:green": "node scripts/run-self-checks.mjs",
    "ops:repair": "node scripts/self-heal.mjs",
    "ops:strict-on": "node -e \"console.log('READYZ=strict');\" && echo",
    "ops:strict-off": "node -e \"console.log('READYZ=lenient');\" && echo",
    "test:access-control": "vitest run tests/access-control.spec.ts",
    "test:rls": "node scripts/test-rls-policies.mjs",
    "security:audit": "node scripts/test-rls-policies.mjs && npm run test:access-control",
    "verify:routing": "node scripts/verify-routing-sync.mjs",
    "sync:all": "npm run verify:routing && npm run test:rls && npm run security:audit",
    "n8n:start": "docker-compose -f docker-compose.n8n.yml up -d",
    "n8n:stop": "docker-compose -f docker-compose.n8n.yml down",
    "n8n:restart": "docker-compose -f docker-compose.n8n.yml restart",
    "n8n:logs": "docker-compose -f docker-compose.n8n.yml logs -f",
    "n8n:backup": "./scripts/n8n-backup.sh",
    "n8n:health": "./scripts/n8n-health-check.sh",
    "n8n:setup": "./n8n-setup.sh"
  },
  "description": "Parent package for Trans Bot AI project",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.55.0",
    "jose": "^6.0.12",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "tsx": "^4.7.0",
    "concurrently": "^8.2.2",
    "js-yaml": "^4.1.0"
  }
}
